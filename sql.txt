Problem statement 1
.
 Consider following Bank database schema and solve given queries:
Account(Acc_no, branch_name,balance)
branch(branch_name,branch_city, assets)
customer(cust_name,cust_street,cust_city)
Depositor(cust_name,acc_no)
Loan(loan_no,branch_name,amount)
Borrower(cust_name,loan_no)

Q.1 Create above tables with appropriate constraints like primary key, foreign key, not null etc.
with suitable data

 create table branch(branch_name char(20) primary key,branch_city char(20) , assets 
number);

 insert into branch values('Nigdi','Pune',10000000)
 insert into branch values('Akurdi','Pune',50000000);

create table account(acc_no number primary key , branch_name char(20) references 
branch(branch_name) on delete set null ,balance number);

 insert into account values(1234567891,'Nigdi',10000);
 insert into account values(1234567892,'Nigdi',20000);
 
   create table customer(cust_name char(20) 
primary key,cust_street varchar(30),cust_city char(20) );

 insert into customer values('Harshad','khed','Pune');
 insert into customer values('Aviraj','Nigdi11','Pune');

 create table depositor(cust_name char(20) references customer(cust_name) on delete 
cascade , acc_no number references account(acc_no) on delete set null);

INSERT INTO depositor (cust_name, acc_no) VALUES ('Customer1', 1);
INSERT INTO depositor (cust_name, acc_no) VALUES ('Customer2', 2);
INSERT INTO depositor (cust_name, acc_no) VALUES ('Customer3', 3);


 create table loan(loan_no number primary key,branch_name char(20) references 
branch(branch_name) on delete set null , amount number);

INSERT INTO loan (loan_no, branch_name, amount) VALUES (1, 'Branch1', 5000.00);
INSERT INTO loan (loan_no, branch_name, amount) VALUES (2, 'Branch2', 7500.00);
INSERT INTO loan (loan_no, branch_name, amount) VALUES (3, 'Branch3', 10000.00);

create table borrower(customer_name char(20) references customer(cust_name)on 
delete cascade,loan_no number references loan(loan_no) on delete set null);

INSERT INTO borrower (cust_name, loan_no) VALUES ('Customer1', 1);
INSERT INTO borrower (cust_name, loan_no) VALUES ('Customer2', 2);
INSERT INTO borrower (cust_name, loan_no) VALUES ('Customer3', 3);


Q.2. Create synonym for customer table as cust.
 create synonym cust for customer;


Q.3 Add customer phone number in Customer table.
 alter table customer add phone_no number(10);

Q.4 Delete phone number attribute from Customer table.
 alter table customer drop column phone_no;

 
Q.5. Find the names of all branches in loan relation.
 select distinct branch_name from loan;

Q.6. Find all customers who have a loan from bank. Find their names,loan_no and loan
amount.
 select borrower.customer_name , borrower.loan_no , loan.amount from borrower,loan 
where borrower.loan_no = loan.loan_no;

Q.7. List all customers in alphabetical order who have loan from Nigdi branch.
 select customer_name from borrower where loan_no in (select loan_no from loan 
where branch_name = 'Nigdi') order by customer_name;

Q.8. Find all customers who have an account or loan or both at bank.
 SELECT cust_name FROM customer where cust_name IN(SELECT customer_name
FROM borrower INTERSECT SELECT cust_name FROM depositor);

Q.9. Find average account balance at Nigdi branch.
 SELECT AVG(balance) AS avg_balance FROM account WHERE branch_name = 'Nigdi';

Q.10. Find no. of depositors at each branch.
SELECT branch_name, COUNT(*) AS num_depositors FROM depositor GROUP BY 
branch_name;
Q.11. Delete all tuples at every branch located in Nigdi.
DELETE FROM branch WHERE branch_city = 'Nigdi';
DELETE FROM account WHERE branch_name = 'Nigdi';




Problem statement 2.

a) Consider following database schema and solve given queries
cust_mstr(cust_no,fname,lname)
add_dets(code_no,add1,add2,state,city,pincode)
1. Create above Tables with suitable data
2. Retrieve the address of customer Fname as 'xyz' and Lname as 'pqr'
3. Create View on add_dets table by selecting any two columns and perform insert
update delete operations

 CREATE TABLE cust_mstr (
  cust_no INT PRIMARY KEY,
  fname VARCHAR(50),
  lname VARCHAR(50)
  );

 CREATE TABLE add_dets (code_no INT references cust_mstr(cust_no),add1 
VARCHAR(100),add2 VARCHAR(100),state VARCHAR(50),city VARCHAR(50),pincode 
VARCHAR(10));

 INSERT INTO add_dets values(1,'Jaulke BK','Pargaon','Maharashtra','Khed',410512);

INSERT INTO add_dets values(2,'xyz','Kolhapur','Maharashtra','Kolhapur',410512);

 select * from add_dets where code_no IN ( select cust_no from cust_mstr where 
fname='Harshad' AND lname='Karale');
 
b) Create following Tables
emp_mstr(e_mpno,f_name,l_name,m_name,dept,desg,branch_no)
branch_mstr(name,b_no)

List the employee details along with branch names to which they belong

 CREATE TABLE branch_mstr(name char(10),b_no number primary key);

 
 CREATE TABLE emp_mstr(emp_no number NOT NULL,fname char(10),lname
char(10),mname char(10),dept char(10),desg char(10),branch_no number references
branch_mstr(b_no) on delete set null);

 select * from emp_mstr where branch_no IN(select b_no from branch_mstr where
name = 'Computer');



Problem statement 3.

 Consider following Bank database schema and solve given queries:
Account(Acc_no, branch_name,balance)
branch(branch_name,branch_city, assets)
customer(cust_name,cust_street,cust_city)
Depositor(cust_name,acc_no)
Loan(loan_no,branch_name,amount)
Borrower(cust_name,loan_no)

Q.1 Create above tables with appropriate constraints like primary key, foreign key 
constrains, not
null etc. with suitable data

create table branch(branch_name char(20) primary key,branch_city char(20) , assets 
number);

 insert into branch values('Nigdi','Pune',10000000)
 insert into branch values('Akurdi','Pune',50000000);

create table account(acc_no number primary key , branch_name char(20) references 
branch(branch_name) on delete set null ,balance number);

 insert into account values(1234567891,'Nigdi',10000);
 insert into account values(1234567892,'Nigdi',20000);
 
   create table customer(cust_name char(20) 
primary key,cust_street varchar(30),cust_city char(20) );

 insert into customer values(‘Harshad’,'khed','Pune');
 insert into customer values('Aviraj','Nigdi11','Pune');

 create table depositor(cust_name char(20) references customer(cust_name) on delete 
cascade , acc_no number references account(acc_no) on delete set null);

 create table loan(loan_no number primary key,branch_name char(20) references 
branch(branch_name) on delete set null , amount number);

create table borrower(customer_name char(20) references customer(cust_name)on 
delete cascade,loan_no number references loan(loan_no) on delete set null);


Q.2. Modify “assets” attribute of branch table to “Property”
ALTER TABLE branch RENAME COLUMN assets TO property;

Q.3. Find all loan numbers for loans made at Akurdi Branch with loan amount > 12000.
 SELECT loan_no FROM loan WHERE branch_name = 'Nigdi' AND amount > 12000;
 
Q.4. Find all customers who have both account and loan at bank.
 SELECT cust_name FROM customer where cust_name IN(SELECT customer_name
FROM borrower INTERSECT SELECT cust_name FROM depositor);

Q.5. Find all customer who have account but no loan at the bank.
 SELECT cust_name FROM customer where cust_name IN(SELECT customer_name
FROM borrower MINUS SELECT cust_name FROM depositor);

Q.6. Find the average account balance at each branch
 SELECT branch_name,AVG(balance) AS avg_balance FROM account Group by 
branch_name;

Q.7. Find the branches where average account balance > 12000.

 SELECT AVG(balance),branch_name FROM account GROUP BY branch_name HAVING
AVG(balance)>12000;

Q.8. Find number of tuples in customer relation.
 SELECT COUNT(*) AS tuple_no FROM customer;

Q.9. Calculate total loan amount given by bank.
SELECT SUM(amount) AS total_loan FROM loan;

Q.10. Delete all loans with loan amount between 1300 and 1500.
 DELETE FROM loan WHERE amount BETWEEN 25000 AND 30000;

Q.11. Create sequence roll_seq and use in student table for roll_no column.
 CREATE SEQUENCE roll_no START with 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 100
CYCLE;

CREATE TABLE student(rollno number , name varchar(10));




Problem statement 4.

a) Create following Tables with suitable data and solve following query
cust_mstr(custno,fname,lname)
acc_fd_cust_dets(codeno,acc_fd_no)
fd_dets(fd_sr_no,amt)
List the customer holding fixed deposit of amount more than 5000
 CREATE TABLE fd_dets(fd_sr_no number primary key ,amt number);

 CREATE TABLE acc_fd_cust_dets(codeno number references cust_mstr(cust_no) on
delete cascade,acc_fd_no number references fd_dets(fd_sr_no) on delete cascade);

 select * from cust_mstr where cust_no IN(SELECT codeno from acc_fd_cust_dets
where acc_fd_no IN(SELECT fd_sr_no FROM fd_dets where amt>5000));

b) Create view on cust_mstr and acc_fd_cust_dets tables by selecting any one column
from each table perform insert update delete operations

1. Create a view selecting any one column from each table:
CREATE VIEW cust_acc_view AS SELECT c.cust_name, a.acc_no FROM cust_mstr c JOIN 
acc_fd_cust_dets a ON c.cust_no = a.cust_no;

2. Perform insert operation on the view:
INSERT INTO cust_acc_view (cust_name, acc_no) VALUES ('John Doe', 123456);

3. Perform update operation on the view:
UPDATE cust_acc_view SET acc_no = 654321 WHERE cust_name = 'John Doe';

4. Perform delete operation on the view:
DELETE FROM cust_acc_view WHERE cust_name = 'John Doe';

c) Create following Tables with suitable data and solve following query
emp_mstr(emp_no,f_name,l_name,m_name,dept)
cntc_dets(code_no,cntc_type,cntc_data)


 Create following Tables 
 emp_mstr(emp_no,f_name,l_name,m_name,dept)
cntc_dets(code_no,cntc_type,cntc_data)
 List the employee details along with contact details using left outer join & right join

 CREATE TABLE emp_mstr(emp_no number primary key,fname char(10),lname
char(10),mname char(10),dept char(10));


 CREATE TABLE cntc_dets(codeno number references emp_mstr(emp_no),cntc_type varchar(20),cntc_data varchar(20));

LEFT OUTER JOIN:

select * from emp_mstr LEFT OUTER JOIN cntc_dets ON
emp_mstr.emp_no = cntc_dets.codeno;

RIGHT OUTER JOIN

 select * from emp_mstr RIGHT OUTER JOIN cntc_dets ON
emp_mstr.emp_no = cntc_dets.codeno;



problem Statement 5

  Create following Tables 
 cust_mstr(cust_no,fname,lname) 
 add_dets(code_no,pincode)
 List the customer who do not have bank branches in their vicinity.

 CREATE TABLE cust_mstr(cust_no varchar(10) primary key ,fname char(10),lname
char(10));

 CREATE TABLE add_dets(cust_no varchar(10),pincode number);

 select c.cust_no,c.fname,c.lname,a.pincode from cust_mstr c join add_dets a on c.cust_no = a.cust_no





